@startuml

interface Schedule

class ScheduleMS01 {
    +create(xml: Elem): Result[Elem]
}

class XMLtoDomain {
    +agenda(xml)
}

class DomainToXML {
    +generateOutputXML(outputSchedule: Result[CompleteSchedule]): Elem
    -generateErrorXML(error: DomainError): Elem
    -vivaListToXML(schedule: CompleteSchedule): Elem
}

class PreferencesCalculation {
    +calculatePreferences(agenda: Agenda, students: List[Student], startTime: DateTime, endTime: DateTime): Result[List[SummedPreference]]
    +calculatePreferenceValuesByStudent(agenda: Agenda, student: Student, startTime: DateTime, endTime: DateTime): Result[Preference]
    +sumPreferences(list: List[Preference]): Result[SummedPreference]
    +sumSummedPreferences(list: List[SummedPreference]): Result[SummedPreference]
}

class AvailabilityOperations {
    +updateAvailability(resource: Resource, viva: ScheduledViva): Result[Resource]
    +removeInterval(availability: Availability, viva: ScheduledViva): List[Availability]
}

ScheduleMS01 --left-|> Schedule : extends
ScheduleMS01 --right-> XMLtoDomain : uses
ScheduleMS01 --down-> PreferencesCalculation : uses
ScheduleMS01 ---down-> DomainToXML : uses
ScheduleMS01 -down-> AvailabilityOperations : uses

@enduml